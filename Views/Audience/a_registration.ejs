<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Kalakshetra Dance Competition - Audience Registration</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700&family=Poppins:wght@300;400;500&display=swap" rel="stylesheet">
    <link href="/Style/style.css" rel="stylesheet">
    <style>
      body {
        background-image: linear-gradient(
            rgba(0, 0, 0, 0.5),
            rgba(0, 0, 0, 0.848)
          ),
          url("/Pictures/Baratham_Pic3.jpg");
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
        min-height: 80vh;
      }
      h1 {
        color: var(--text-color);
        font-weight: bold;
      }
      h2 {
        color: #f5f0ed;
        padding-bottom: 35px;
        font-weight: bold;
      }
      .container {
        width: 60%; /* Set the width to 60% */
        max-width: 1000px; /* You can keep this if you want a maximum width */
        height: 60%;
        max-height: 1000px;
        background-color: var(--card-bg);
        border-radius: 25px;
        padding: 4rem; /* Increased padding */
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
        margin-top: 60px;
      }
      .form-control {
        background-color: rgba(47, 51, 57, 0.8);
        color: white;
        border: 1px solid rgba(72, 68, 68, 0.5);
      }
      .form-control:focus {
        background-color: #3e444d;
        border-color: #d2a679;
        box-shadow: none;
        color: white;
      }
      label {
        color: #d9d7d7;
      }
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark fixed">
      <a class="navbar-brand" href="/Views/Home/test-index.html"
        >Kalakshetra 6.0</a
      >
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarNav"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
        <ul class="navbar-nav ms-auto">
          <li class="nav-item"><a class="nav-link" href="/">About</a></li>
          <li class="nav-item"><a class="nav-link" href="/registration">Participants</a></li>
          <li class="nav-item"><a class="nav-link" href="/merchandise">Merchandise</a></li>
          <li class="nav-item"><a class="nav-link" href="/tickets">Tickets</a></li>
          <li class="nav-item"><a class="nav-link" href="#faq">FAQ</a></li>
          <li class="nav-item"><a class="nav-link" href="#contact">Contact</a></li>
      </ul>
          <a class="btn btn-custom1" href="/admin"><strong>ADMIN LOGIN</strong></a>
      </div>
    </nav>

    <div class="container mt-5">
      <h1 class="text-center">Kalakshetra 6.0</h1>
      <h2 class="text-center">Ticket</h2>

      <form id="registration">
        <div class="form-group">
          <label for="fullName">Full Name</label>
          <input type="text" class="form-control" id="fullName" required />
        </div>
        <div class="form-group">
          <label for="email">Email Address</label>
          <input type="email" class="form-control" id="email" required />
        </div>
        <div class="form-group">
          <label for="phone">Phone Number</label>
          <input type="tel" class="form-control" id="phone" required />
        </div>
        <div class="form-group">
          <label for="numberOfTickets">Number of Tickets</label>
          <input
            type="number"
            class="form-control"
            id="numberOfTickets"
            min="1"
            max="10"
            required
          />
        </div>

        <div class="price-info">
          <p class="mb-1">Price per ticket: RM 5.00</p>
          <div id="totalPrice">Total Amount: RM 5.00</div>
        </div>

        <div class="text-center">
          <button type="submit" class="btn btn-primary">Proceed to Payment</button>
        </div>
      </form>
    </div>

    <script>

// Add stylesheet for validation alerts
const style = document.createElement('style');
    style.textContent = `
        .validation-alert {
            background-color: #fff3cd;
            border: 1px solid #ffeeba;
            color: #856404;
            padding: 12px;
            margin-top: 5px;
            border-radius: 4px;
            display: flex;
            align-items: center;
        }
        .validation-alert::before {
            content: "!";
            background-color: #856404;
            color: white;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            margin-right: 10px;
            font-weight: bold;
        }
    `;
    document.head.appendChild(style);

    // Input Validation Functions
    const SecurityValidation = {
        sanitizeText(input) {
            if (typeof input !== 'string') return '';
            return input
                .trim()
                .replace(/[<>]/g, '')
                .replace(/['"]/g, '')
                .replace(/[;]/g, '');
        },

        validateName(name) {
            const sanitizedName = this.sanitizeText(name);
            const nameRegex = /^[A-Za-z\s'-]{2,50}$/;
            return {
                isValid: nameRegex.test(sanitizedName),
                sanitized: sanitizedName
            };
        },

        validateEmail(email) {
            const sanitizedEmail = this.sanitizeText(email);
            const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
            return {
                isValid: emailRegex.test(sanitizedEmail),
                sanitized: sanitizedEmail
            };
        },

        validatePhone(phone) {
            const sanitizedPhone = this.sanitizeText(phone);
            // Malaysian phone number format
            const phoneRegex = /^(\+?6?01)[0-46-9]-*[0-9]{7,8}$/;
            return {
                isValid: phoneRegex.test(sanitizedPhone),
                sanitized: sanitizedPhone
            };
        },

        validateTickets(tickets) {
            const numTickets = parseInt(tickets);
            return {
                isValid: !isNaN(numTickets) && numTickets >= 1 && numTickets <= 10,
                sanitized: numTickets
            };
        }
    };

    // Add real-time validation
    function addInputValidation() {
        // Name validation
        document.getElementById('fullName').addEventListener('input', function() {
            const validation = SecurityValidation.validateName(this.value);
            let feedback = this.parentNode.querySelector('.validation-alert');
            
            if (!validation.isValid) {
                if (!feedback) {
                    feedback = document.createElement('div');
                    feedback.className = 'validation-alert';
                    this.parentNode.appendChild(feedback);
                }
                feedback.textContent = 'Name must be 2-50 characters long and can only contain letters, spaces, hyphens or apostrophes';
                this.classList.add('is-invalid');
            } else {
                if (feedback) feedback.remove();
                this.classList.remove('is-invalid');
            }
        });

        // Email validation
        document.getElementById('email').addEventListener('input', function() {
            const validation = SecurityValidation.validateEmail(this.value);
            let feedback = this.parentNode.querySelector('.validation-alert');
            
            if (!validation.isValid) {
                if (!feedback) {
                    feedback = document.createElement('div');
                    feedback.className = 'validation-alert';
                    this.parentNode.appendChild(feedback);
                }
                feedback.textContent = 'Please include an "@" in the email address';
                this.classList.add('is-invalid');
            } else {
                if (feedback) feedback.remove();
                this.classList.remove('is-invalid');
            }
        });

        // Phone validation
        document.getElementById('phone').addEventListener('input', function() {
            const validation = SecurityValidation.validatePhone(this.value);
            let feedback = this.parentNode.querySelector('.validation-alert');
            
            if (!validation.isValid) {
                if (!feedback) {
                    feedback = document.createElement('div');
                    feedback.className = 'validation-alert';
                    this.parentNode.appendChild(feedback);
                }
                feedback.textContent = 'Please enter a valid Malaysian phone number (e.g., 601X-XXXXXXX)';
                this.classList.add('is-invalid');
            } else {
                if (feedback) feedback.remove();
                this.classList.remove('is-invalid');
            }
        });

        // Ticket number validation
        document.getElementById('numberOfTickets').addEventListener('input', function() {
            const validation = SecurityValidation.validateTickets(this.value);
            let feedback = this.parentNode.querySelector('.validation-alert');
            
            if (!validation.isValid) {
                if (!feedback) {
                    feedback = document.createElement('div');
                    feedback.className = 'validation-alert';
                    this.parentNode.appendChild(feedback);
                }
                feedback.textContent = 'Please select between 1 and 10 tickets';
                this.classList.add('is-invalid');
            } else {
                if (feedback) feedback.remove();
                this.classList.remove('is-invalid');
                
                // Update total price
                const total = validation.sanitized * 5;
                document.getElementById('totalPrice').textContent = `Total Amount: RM ${total.toFixed(2)}`;
            }
        });
    }

    // Initialize validation
    document.addEventListener('DOMContentLoaded', addInputValidation);

    // Handle form submission
    document.getElementById('registration').addEventListener('submit', async function(event) {
        event.preventDefault();
        
        // Validate all fields before submission
        const nameValidation = SecurityValidation.validateName(document.getElementById('fullName').value);
        const emailValidation = SecurityValidation.validateEmail(document.getElementById('email').value);
        const phoneValidation = SecurityValidation.validatePhone(document.getElementById('phone').value);
        const ticketsValidation = SecurityValidation.validateTickets(document.getElementById('numberOfTickets').value);

        if (!nameValidation.isValid || !emailValidation.isValid || 
            !phoneValidation.isValid || !ticketsValidation.isValid) {
            alert('Please correct all errors before submitting.');
            return;
        }

        try {
            const formData = {
                name: nameValidation.sanitized,
                email: emailValidation.sanitized,
                phone: phoneValidation.sanitized,
                tickets: ticketsValidation.sanitized
            };
            
            console.log('Sending form data:', formData);

            const response = await fetch('/api/audience/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            });

            console.log('Response received:', response);

            const result = await response.json();
            console.log('Parsed result:', result);

            if (result.success) {
                console.log('Redirecting to:', result.data.redirectUrl);
                window.location.href = result.data.redirectUrl;
            } else {
                console.error('Registration failed:', result.message);
                alert(result.message || 'Registration failed. Please try again.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Registration failed. Please try again.');
        }
    });
    </script>
  </body>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"></script>

</html>
